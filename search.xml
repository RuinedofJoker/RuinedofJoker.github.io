<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用WebRTC技术实现点对点的直播交互</title>
      <link href="/2024/07/16/%E4%BD%BF%E7%94%A8WebRTC%E6%8A%80%E6%9C%AF%E5%AE%9E%E7%8E%B0%E7%82%B9%E5%AF%B9%E7%82%B9%E7%9A%84%E7%9B%B4%E6%92%AD%E4%BA%A4%E4%BA%92/"/>
      <url>/2024/07/16/%E4%BD%BF%E7%94%A8WebRTC%E6%8A%80%E6%9C%AF%E5%AE%9E%E7%8E%B0%E7%82%B9%E5%AF%B9%E7%82%B9%E7%9A%84%E7%9B%B4%E6%92%AD%E4%BA%A4%E4%BA%92/</url>
      
        <content type="html"><![CDATA[<h2 id="WebRTC技术介绍"><a href="#WebRTC技术介绍" class="headerlink" title="WebRTC技术介绍"></a>WebRTC技术介绍</h2><p>首先来看下百科文档中对该技术的介绍：<br>WebRTC（Web 实时通信）是一种使 Web 应用程序和站点能够捕获和选择性地流式传输音频或视频媒体，以及在浏览器之间交换任意数据的而无需中间件的技术。WebRTC 的一系列标准使得在不需要用户安装插件或任何其他第三方软件的情况下，可以实现点对点数据共享和电话会议。</p><p>说人话，这个技术就是一个基于p2p(点对点)的可实时视频和音频传输的直播技术。<br>由于是基于点对点的技术，对直播主机的网络性能要求较高，一个直播间内不推荐同时存在太多人，因此十分适合做在线会议等类似的场景。<br>上面这段话还有一个重点，浏览器之间交换任意数据的而无需中间件。现在市面上的大部分浏览器都支持这个技术，笔者这里使用了谷歌的Chrome和微软的Edge，都是完全支持的，并且客户端不需要下任何的插件。<br>但需要注意的是，这里客户端不需要任何中间间，并不代表服务端也不需要。这里至少需要一个基于websocket的信令服务器（信令这个概念后面会介绍，这里我使用的是自己写的一个基于netty的websocket服务器，后面代码里会带大家一起写）；以及因为技术是基于p2p的，一般非公网ip的客户端之间可能无法直接连接，所以需要一个打洞服务器来保证两端连接，这里使用docker安装了一个coturn服务。</p><h2 id="websocket技术介绍"><a href="#websocket技术介绍" class="headerlink" title="websocket技术介绍"></a>websocket技术介绍</h2><h2 id="socket-io技术介绍"><a href="#socket-io技术介绍" class="headerlink" title="socket.io技术介绍"></a>socket.io技术介绍</h2><h2 id="基于socket-io实现的聊天室全部代码"><a href="#基于socket-io实现的聊天室全部代码" class="headerlink" title="基于socket.io实现的聊天室全部代码"></a>基于socket.io实现的聊天室全部代码</h2><h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><p>index.html：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;user-id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;login-form&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> <span class="attr">onsubmit</span>=<span class="string">&quot;return false&quot;</span>&gt;</span></span><br><span class="line">            用户id:<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;input-user-id&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            加入房间id:<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;input-room-id&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;login&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;chat-content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;send-content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> <span class="attr">onsubmit</span>=<span class="string">&quot;return false&quot;</span>&gt;</span></span><br><span class="line">            消息:<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;msg&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;send-button&quot;</span>&gt;</span>发送<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../jquery-3.7.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../socket.io-4.7.5.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>index.js：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> socket = <span class="literal">null</span></span><br><span class="line"><span class="keyword">let</span> socketId = <span class="literal">null</span></span><br><span class="line"><span class="keyword">let</span> roomId = <span class="literal">null</span></span><br><span class="line"><span class="keyword">let</span> userId = <span class="literal">null</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = <span class="number">9092</span></span><br><span class="line"></span><br><span class="line">$(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    $(<span class="string">&#x27;#user-id&#x27;</span>).<span class="title function_">hide</span>()</span><br><span class="line">    $(<span class="string">&#x27;#send-content&#x27;</span>).<span class="title function_">hide</span>()</span><br><span class="line">    $(<span class="string">&#x27;#login&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        roomId = $(<span class="string">&#x27;#input-room-id&#x27;</span>).<span class="title function_">val</span>()</span><br><span class="line">        userId = $(<span class="string">&#x27;#input-user-id&#x27;</span>).<span class="title function_">val</span>()</span><br><span class="line">        <span class="title function_">initSocket</span>()</span><br><span class="line">        $(<span class="string">&#x27;#user-id&#x27;</span>).<span class="title function_">text</span>($(<span class="string">&#x27;#input-user-id&#x27;</span>).<span class="title function_">val</span>())</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">initSocket</span>(<span class="params"></span>) &#123;</span><br><span class="line">    socket = <span class="title function_">io</span>(<span class="string">`ws://localhost:<span class="subst">$&#123;PORT&#125;</span>`</span>, &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">`/socket.io`</span>,</span><br><span class="line">        <span class="attr">withCredentials</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">extraHeaders</span>: &#123;</span><br><span class="line">            <span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;*:*&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">origins</span>: <span class="string">&#x27;*:*&#x27;</span>,</span><br><span class="line">        <span class="attr">query</span>: &#123;</span><br><span class="line">            userId,</span><br><span class="line">            roomId</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">cors</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">transports</span>: [<span class="string">&#x27;websocket&#x27;</span>],</span><br><span class="line">        <span class="attr">transportOptions</span>: &#123;</span><br><span class="line">            <span class="attr">polling</span>:&#123;</span><br><span class="line">                <span class="attr">extraHeaders</span>:&#123;</span><br><span class="line">                    <span class="string">&#x27;user-id&#x27;</span> : userId,</span><br><span class="line">                    <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>: <span class="string">&#x27;*&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;Origin&#x27;</span>: <span class="string">&#x27;*&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    socket.<span class="title function_">on</span>(<span class="string">&#x27;connected&#x27;</span>, onConnected)</span><br><span class="line">    socket.<span class="title function_">on</span>(<span class="string">&#x27;connect_error&#x27;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Connection error:&#x27;</span>, err);</span><br><span class="line">    &#125;);</span><br><span class="line">    socket.<span class="title function_">on</span>(<span class="string">&#x27;connect_timeout&#x27;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Connection timeout:&#x27;</span>, err);</span><br><span class="line">    &#125;);</span><br><span class="line">    socket.<span class="title function_">on</span>(<span class="string">&#x27;receiveMsg&#x27;</span>, onReceiveMsg)</span><br><span class="line">    $(<span class="string">&#x27;#user-id&#x27;</span>).<span class="title function_">show</span>()</span><br><span class="line">    $(<span class="string">&#x27;#send-content&#x27;</span>).<span class="title function_">show</span>()</span><br><span class="line">    $(<span class="string">&#x27;#login-form&#x27;</span>).<span class="title function_">hide</span>()</span><br><span class="line">    $(<span class="string">&#x27;#send-button&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> msg = $(<span class="string">&#x27;#msg&#x27;</span>).<span class="title function_">val</span>()</span><br><span class="line">        <span class="keyword">if</span> (!userId) &#123;</span><br><span class="line">            <span class="variable language_">window</span>.<span class="title function_">alert</span>(<span class="string">&#x27;用户id不能为空&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> msgObj = &#123;</span><br><span class="line">            <span class="attr">localUserId</span>: userId,</span><br><span class="line">            roomId,</span><br><span class="line">            <span class="attr">message</span>: msg</span><br><span class="line">        &#125;</span><br><span class="line">        $(<span class="string">&#x27;#msg&#x27;</span>).<span class="title function_">val</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        socket.<span class="title function_">emit</span>(<span class="string">&#x27;sendRoomMsg&#x27;</span>, msgObj)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">onConnected</span>(<span class="params">id</span>) &#123;</span><br><span class="line">    socketId = id</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(id);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">onReceiveMsg</span>(<span class="params">message</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> addMsg = <span class="string">`<span class="subst">$&#123;message.remoteUserId&#125;</span>: <span class="subst">$&#123;message.message&#125;</span>`</span></span><br><span class="line">    $(<span class="string">&#x27;#chat-content&#x27;</span>).<span class="title function_">append</span>($(<span class="string">&quot;&lt;li&gt;&lt;/li&gt;&quot;</span>).<span class="title function_">text</span>(addMsg))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h4><p>依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.joker<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>test1-backend<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>test1-backend<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>test1-backend<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-boot.version</span>&gt;</span>2.7.6<span class="tag">&lt;/<span class="name">spring-boot.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.corundumstudio.socketio<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>netty-socketio<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.fastjson2<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.43<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>org.joker.test1backend.Test1BackendApplication<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">skip</span>&gt;</span>true<span class="tag">&lt;/<span class="name">skip</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>application.yml文件:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">socketio:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9092</span></span><br><span class="line">  <span class="comment"># 设置最大每帧处理数据的长度，防止他人利用大数据来攻击服务器</span></span><br><span class="line">  <span class="attr">maxFramePayloadLength:</span> <span class="number">1048576</span></span><br><span class="line">  <span class="comment"># 设置http交互最大内容长度</span></span><br><span class="line">  <span class="attr">maxHttpContentLength:</span> <span class="number">1048576</span></span><br><span class="line">  <span class="comment"># socket连接数大小（如只监听一个端口boss线程组为1即可）</span></span><br><span class="line">  <span class="attr">bossCount:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">workCount:</span> <span class="number">100</span></span><br><span class="line">  <span class="attr">allowCustomRequests:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 协议升级超时时间（毫秒），默认10秒。HTTP握手升级为ws协议超时时间</span></span><br><span class="line">  <span class="attr">upgradeTimeout:</span> <span class="number">1000000</span></span><br><span class="line">  <span class="comment"># Ping消息超时时间（毫秒），默认60秒，这个时间间隔内没有接收到心跳消息就会发送超时事件</span></span><br><span class="line">  <span class="attr">pingTimeout:</span> <span class="number">6000000</span></span><br><span class="line">  <span class="comment"># Ping消息间隔（毫秒），默认25秒。客户端向服务器发送一条心跳消息间隔</span></span><br><span class="line">  <span class="attr">pingInterval:</span> <span class="number">25000</span></span><br><span class="line">  <span class="attr">prefix:</span> <span class="string">/socket.io</span></span><br></pre></td></tr></table></figure><p>SocketIOConfig配置类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.joker.test1backend.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.corundumstudio.socketio.SocketConfig;</span><br><span class="line"><span class="keyword">import</span> com.corundumstudio.socketio.SocketIOServer;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.joker.test1backend.handler.SocketIOHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.PostConstruct;</span><br><span class="line"><span class="keyword">import</span> javax.annotation.PreDestroy;</span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SocketIOConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> SocketIOHandler socketIOHandler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;socketio.host&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String host;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;socketio.port&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer port;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;socketio.bossCount&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> bossCount;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;socketio.workCount&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> workCount;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;socketio.allowCustomRequests&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> allowCustomRequests;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;socketio.upgradeTimeout&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> upgradeTimeout;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;socketio.pingTimeout&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> pingTimeout;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;socketio.pingInterval&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> pingInterval;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;socketio.prefix&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String prefix;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">volatile</span> SocketIOServer socketIOServer;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">SocketConfig</span> <span class="variable">socketConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SocketConfig</span>();</span><br><span class="line">        socketConfig.setReuseAddress(<span class="literal">true</span>);</span><br><span class="line">        socketConfig.setTcpNoDelay(<span class="literal">true</span>);</span><br><span class="line">        socketConfig.setSoLinger(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        com.corundumstudio.socketio.<span class="type">Configuration</span> <span class="variable">configuration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">com</span>.corundumstudio.socketio.Configuration();</span><br><span class="line">        configuration.setSocketConfig(socketConfig);</span><br><span class="line">        <span class="comment">// host在本地测试可以设置为localhost或者本机IP，在Linux服务器跑可换成服务器IP</span></span><br><span class="line">        configuration.setHostname(host);</span><br><span class="line">        configuration.setPort(port);</span><br><span class="line">        <span class="comment">// socket连接数大小（如只监听一个端口boss线程组为1即可）</span></span><br><span class="line">        configuration.setBossThreads(bossCount);</span><br><span class="line">        configuration.setWorkerThreads(workCount);</span><br><span class="line">        configuration.setAllowCustomRequests(allowCustomRequests);</span><br><span class="line">        <span class="comment">// 协议升级超时时间（毫秒），默认10秒。HTTP握手升级为ws协议超时时间</span></span><br><span class="line">        configuration.setUpgradeTimeout(upgradeTimeout);</span><br><span class="line">        <span class="comment">// Ping消息超时时间（毫秒），默认60秒，这个时间间隔内没有接收到心跳消息就会发送超时事件</span></span><br><span class="line">        configuration.setPingTimeout(pingTimeout);</span><br><span class="line">        <span class="comment">// Ping消息间隔（毫秒），默认25秒。客户端向服务器发送一条心跳消息间隔</span></span><br><span class="line">        configuration.setPingInterval(pingInterval);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置路径</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotBlank(prefix)) &#123;</span><br><span class="line">            configuration.setContext(prefix);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        configuration.setOrigin(<span class="string">&quot;*&quot;</span>);</span><br><span class="line"></span><br><span class="line">        socketIOServer = <span class="keyword">new</span> <span class="title class_">SocketIOServer</span>(configuration);</span><br><span class="line">        <span class="comment">//添加事件监听器</span></span><br><span class="line">        socketIOServer.addListeners(socketIOHandler);</span><br><span class="line">        <span class="comment">//启动SocketIOServer</span></span><br><span class="line">        socketIOServer.start();</span><br><span class="line">        log.info(<span class="string">&quot;SocketIO启动完毕&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PreDestroy</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;SocketIO开始停止&quot;</span>);</span><br><span class="line">        socketIOServer.stop();</span><br><span class="line">        log.info(<span class="string">&quot;SocketIO已停止&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ws处理器类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.joker.test1backend.handler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.corundumstudio.socketio.AckRequest;</span><br><span class="line"><span class="keyword">import</span> com.corundumstudio.socketio.SocketIOClient;</span><br><span class="line"><span class="keyword">import</span> com.corundumstudio.socketio.annotation.OnConnect;</span><br><span class="line"><span class="keyword">import</span> com.corundumstudio.socketio.annotation.OnDisconnect;</span><br><span class="line"><span class="keyword">import</span> com.corundumstudio.socketio.annotation.OnEvent;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.joker.test1backend.common.ClientCache;</span><br><span class="line"><span class="keyword">import</span> org.joker.test1backend.domain.ClientInfo;</span><br><span class="line"><span class="keyword">import</span> org.joker.test1backend.domain.MessageInfo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SocketIOHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource(name = &quot;localClientCache&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> ClientCache clientCache;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OnConnect</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onConnect</span><span class="params">(SocketIOClient client)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">roomId</span> <span class="operator">=</span> getRoomId(client);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userId</span> <span class="operator">=</span> getUserId(client);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(roomId) || StringUtils.isBlank(userId)) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;加入房间错误 roomId=&#123;&#125;, userId=&#123;&#125;&quot;</span>, roomId, userId);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">UUID</span> <span class="variable">sessionId</span> <span class="operator">=</span> client.getSessionId();</span><br><span class="line">        log.info(<span class="string">&quot;userId=&#123;&#125;用户建立连接sessionId=&#123;&#125;&quot;</span>, userId, sessionId);</span><br><span class="line">        clientCache.saveClient(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ClientInfo</span>()</span><br><span class="line">                        .setRoomId(roomId)</span><br><span class="line">                        .setLocalUserId(userId)</span><br><span class="line">                        .setSessionId(sessionId)</span><br><span class="line">                        .setSocketIOClient(client)</span><br><span class="line">        );</span><br><span class="line">        client.sendEvent(<span class="string">&quot;connected&quot;</span>, sessionId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OnDisconnect</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDisconnect</span><span class="params">(SocketIOClient client)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">roomId</span> <span class="operator">=</span> getRoomId(client);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userId</span> <span class="operator">=</span> getUserId(client);</span><br><span class="line">        <span class="type">UUID</span> <span class="variable">sessionId</span> <span class="operator">=</span> client.getSessionId();</span><br><span class="line">        log.info(<span class="string">&quot;userId=&#123;&#125;用户取消连接sessionId=&#123;&#125;&quot;</span>, userId, sessionId);</span><br><span class="line">        clientCache.deleteClient(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ClientInfo</span>()</span><br><span class="line">                        .setRoomId(roomId)</span><br><span class="line">                        .setLocalUserId(userId)</span><br><span class="line">                        .setSessionId(sessionId)</span><br><span class="line">                        .setSocketIOClient(client)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OnEvent(&quot;sendMsg&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendMsg</span><span class="params">(SocketIOClient client, AckRequest ackRequest, MessageInfo message)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;接受到 sendMsg 事件 MessageInfo=&#123;&#125;&quot;</span>, message);</span><br><span class="line">        <span class="type">String</span> <span class="variable">roomId</span> <span class="operator">=</span> getRoomId(client);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userId</span> <span class="operator">=</span> getUserId(client);</span><br><span class="line">        <span class="type">UUID</span> <span class="variable">sessionId</span> <span class="operator">=</span> client.getSessionId();</span><br><span class="line">        <span class="type">ClientInfo</span> <span class="variable">remoteClient</span> <span class="operator">=</span> clientCache.getClient(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ClientInfo</span>()</span><br><span class="line">                        .setRoomId(roomId)</span><br><span class="line">                        .setLocalUserId(userId)</span><br><span class="line">                        .setRemoteUserId(message.getRemoteUserId())</span><br><span class="line">                        .setSocketIOClient(client)</span><br><span class="line">                        .setSessionId(sessionId)</span><br><span class="line">        );</span><br><span class="line">        <span class="type">SocketIOClient</span> <span class="variable">remoteSocketIOClient</span> <span class="operator">=</span> remoteClient.getSocketIOClient();</span><br><span class="line">        <span class="keyword">if</span> (remoteSocketIOClient == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 抛异常什么的</span></span><br><span class="line">            log.error(<span class="string">&quot;找不到userId=&#123;&#125;的远程Socket&quot;</span>, message.getRemoteUserId());</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        remoteSocketIOClient.sendEvent(<span class="string">&quot;receiveMsg&quot;</span>, message.switchUserId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OnEvent(&quot;sendRoomMsg&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendRoomMsg</span><span class="params">(SocketIOClient client, AckRequest ackRequest, MessageInfo message)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;接受到 sendRoomMsg 事件 MessageInfo=&#123;&#125;&quot;</span>, message);</span><br><span class="line">        <span class="type">String</span> <span class="variable">roomId</span> <span class="operator">=</span> getRoomId(client);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userId</span> <span class="operator">=</span> getUserId(client);</span><br><span class="line">        <span class="type">UUID</span> <span class="variable">sessionId</span> <span class="operator">=</span> client.getSessionId();</span><br><span class="line">        message.switchUserId();</span><br><span class="line">        clientCache.getRoomClients(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ClientInfo</span>()</span><br><span class="line">                        .setRoomId(roomId)</span><br><span class="line">                        .setLocalUserId(userId)</span><br><span class="line">                        .setRemoteUserId(message.getRemoteUserId())</span><br><span class="line">                        .setSocketIOClient(client)</span><br><span class="line">                        .setSessionId(sessionId)</span><br><span class="line">        ).getRoomSocketIOClients().values().forEach(it -&gt; &#123;</span><br><span class="line">            it.sendEvent(<span class="string">&quot;receiveMsg&quot;</span>, message);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getUserId</span><span class="params">(SocketIOClient client)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> client.getHandshakeData().getSingleUrlParam(<span class="string">&quot;userId&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getRoomId</span><span class="params">(SocketIOClient client)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> client.getHandshakeData().getSingleUrlParam(<span class="string">&quot;roomId&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ws服务缓存接口与本地缓存实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.joker.test1backend.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.joker.test1backend.domain.ClientInfo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 客户端缓存接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ClientCache</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 存储客户端</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clientInfo</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">saveClient</span><span class="params">(ClientInfo clientInfo)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取客户端</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clientInfo</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    ClientInfo <span class="title function_">getClient</span><span class="params">(ClientInfo clientInfo)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取房间内所有客户端</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clientInfo</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    ClientInfo <span class="title function_">getRoomClients</span><span class="params">(ClientInfo clientInfo)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从缓存中删除客户端</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clientInfo</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">deleteClient</span><span class="params">(ClientInfo clientInfo)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> org.joker.test1backend.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.corundumstudio.socketio.SocketIOClient;</span><br><span class="line"><span class="keyword">import</span> org.joker.test1backend.domain.ClientInfo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component(&quot;localClientCache&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LocalClientCache</span> <span class="keyword">implements</span> <span class="title class_">ClientCache</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// roomId - userId - socketIO</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String, Map&lt;String, SocketIOClient&gt;&gt; cache = <span class="keyword">new</span> <span class="title class_">ConcurrentHashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveClient</span><span class="params">(ClientInfo clientInfo)</span> &#123;</span><br><span class="line">        cache.compute(clientInfo.getRoomId(), (k, v) -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (v == <span class="literal">null</span>) &#123;</span><br><span class="line">                v = <span class="keyword">new</span> <span class="title class_">ConcurrentHashMap</span>&lt;&gt;();</span><br><span class="line">            &#125;</span><br><span class="line">            v.put(clientInfo.getLocalUserId(), clientInfo.getSocketIOClient());</span><br><span class="line">            <span class="keyword">return</span> v;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ClientInfo <span class="title function_">getClient</span><span class="params">(ClientInfo clientInfo)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ClientInfo</span>().setSocketIOClient(cache.get(clientInfo.getRoomId()).get(clientInfo.getRemoteUserId()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ClientInfo <span class="title function_">getRoomClients</span><span class="params">(ClientInfo clientInfo)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ClientInfo</span>().setRoomSocketIOClients(cache.get(clientInfo.getRoomId()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteClient</span><span class="params">(ClientInfo clientInfo)</span> &#123;</span><br><span class="line">        cache.computeIfPresent(clientInfo.getRoomId(), (k, v) -&gt; &#123;</span><br><span class="line">            v.remove(clientInfo.getLocalUserId());</span><br><span class="line">            <span class="keyword">if</span> (v.isEmpty()) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> v;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实体类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.joker.test1backend.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.corundumstudio.socketio.SocketIOClient;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.experimental.Accessors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Accessors(chain = true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ClientInfo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SocketIOClient socketIOClient;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, SocketIOClient&gt; roomSocketIOClients;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String roomId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String localUserId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String remoteUserId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UUID sessionId;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">    </span><br><span class="line"><span class="keyword">package</span> org.joker.test1backend.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.experimental.Accessors;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Accessors(chain = true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MessageInfo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer msgType;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String roomId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String localUserId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String remoteUserId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Object data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> MessageInfo <span class="title function_">switchUserId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">userId</span> <span class="operator">=</span> localUserId;</span><br><span class="line">        localUserId = remoteUserId;</span><br><span class="line">        remoteUserId = userId;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动类就是正常的springboot启动类</p><h2 id="安装coturn"><a href="#安装coturn" class="headerlink" title="安装coturn"></a>安装coturn</h2><p>在下面的webRTC实战中需要用到一个turn或stun的打洞服务器</p><p>webRTC协议是一种p2p的协议，一般ipv4的网络ip下都是用的NAT的内网，所以如果需要p2p发送媒体流需要打洞（应该是这个原理）</p><p>webRTC里面有个<strong>IceCandidate</strong>需要一个turn或stun服务器，这里我选择使用docker部署一个coturn服务器</p><p>直接用docker run 命令拉取最新的coturn&#x2F;coturn镜像并启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -d -p 3478:3478 -p 3478:3478/udp coturn/coturn</span><br></pre></td></tr></table></figure><p><a href="https://webrtc.github.io/samples/src/content/peerconnection/trickle-ice/">https://webrtc.github.io/samples/src/content/peerconnection/trickle-ice/</a>   这个网站可以测试IceCandidate服务是否有效</p><p>在下面URI处加 <code>stun:localhost:3478</code> 然后点 Add Server 按钮最后点下面的 Gather candidates 按钮测试</p><p>可以在容器内修改配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it &lt;容器id&gt; /bin/bash</span><br><span class="line"> </span><br><span class="line">vi etc/turnserver.conf</span><br></pre></td></tr></table></figure><p>使用windows docker在启动过程中可能遇到这个报错：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(HTTP code 500) server error - Ports are not available: exposing port TCP 0.0.0.0:3478 -&gt; 0.0.0.0:0: listen tcp 0.0.0.0:3478: bind: An attempt was made to access a socket in a way forbidden by its access permissions.</span><br></pre></td></tr></table></figure><p>有可能是与hyper-v保留端口冲突了</p><p>查看hyper-v启动后的保留端口范围：<br><code>netsh interface ipv4 show excludedportrange protocol=tcp</code></p><p>修改hyper-v保留端口：</p><ol><li>以管理员身份运行 cmd 或 powershell</li><li>停止Windows NAT 驱动程序<br><code>net stop winnat</code></li><li>使用以下命令永久排除6379作为保留端口<br>netsh int ipv4 add excludedportrange protocol&#x3D;tcp startport&#x3D;6379 numberofports&#x3D;1 store&#x3D;persistent<br>提示：关键在于store&#x3D;persistent参数表示持久化信息<br>上面的命令可以通过修改numberofports参数保留startport开始的多个端口</li><li>开启Windows NAT 驱动程序<br><code>net start winnat</code></li><li>再次运行 netsh interface ipv4 show excludedportrange protocol&#x3D;tcp 命令</li></ol><h2 id="socker-io-webRTC实现在线视频直播聊天"><a href="#socker-io-webRTC实现在线视频直播聊天" class="headerlink" title="socker.io + webRTC实现在线视频直播聊天"></a>socker.io + webRTC实现在线视频直播聊天</h2><h3 id="客户端-1"><a href="#客户端-1" class="headerlink" title="客户端"></a>客户端</h3><p>index.html:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;user-id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;login-form&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> <span class="attr">onsubmit</span>=<span class="string">&quot;return false&quot;</span>&gt;</span></span><br><span class="line">            用户id:<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;input-user-id&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            加入房间id:<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;input-room-id&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;login&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;chat-content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;send-content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> <span class="attr">onsubmit</span>=<span class="string">&quot;return false&quot;</span>&gt;</span></span><br><span class="line">            消息:<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;msg&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;send-button&quot;</span>&gt;</span>发送<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">&quot;remote-video&quot;</span> <span class="attr">autoplay</span>=<span class="string">&quot;autoplay&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../jquery-3.7.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../socket.io-4.7.5.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>index.js:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> socket = <span class="literal">null</span></span><br><span class="line"><span class="keyword">let</span> socketId = <span class="literal">null</span></span><br><span class="line"><span class="keyword">let</span> roomId = <span class="literal">null</span></span><br><span class="line"><span class="keyword">let</span> userId = <span class="literal">null</span></span><br><span class="line"><span class="keyword">let</span> pcs = &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> addedPCs = &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> localStream = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">HOST</span> = <span class="string">&quot;localhost&quot;</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = <span class="number">8080</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">WS_PORT</span> = <span class="number">9092</span></span><br><span class="line"></span><br><span class="line">$(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    $(<span class="string">&#x27;#user-id&#x27;</span>).<span class="title function_">hide</span>()</span><br><span class="line">    $(<span class="string">&#x27;#send-content&#x27;</span>).<span class="title function_">hide</span>()</span><br><span class="line">    $(<span class="string">&#x27;#remote-video&#x27;</span>).<span class="title function_">hide</span>()</span><br><span class="line">    $(<span class="string">&#x27;#login&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        roomId = $(<span class="string">&#x27;#input-room-id&#x27;</span>).<span class="title function_">val</span>()</span><br><span class="line">        userId = $(<span class="string">&#x27;#input-user-id&#x27;</span>).<span class="title function_">val</span>()</span><br><span class="line">        <span class="title function_">initSocket</span>()</span><br><span class="line">        $(<span class="string">&#x27;#user-id&#x27;</span>).<span class="title function_">text</span>($(<span class="string">&#x27;#input-user-id&#x27;</span>).<span class="title function_">val</span>())</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">initSocket</span>(<span class="params"></span>) &#123;</span><br><span class="line">    socket = <span class="title function_">io</span>(<span class="string">`ws://<span class="subst">$&#123;HOST&#125;</span>:<span class="subst">$&#123;WS_PORT&#125;</span>`</span>, &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">`/socket.io`</span>,</span><br><span class="line">        <span class="attr">withCredentials</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">extraHeaders</span>: &#123;</span><br><span class="line">            <span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;*:*&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">origins</span>: <span class="string">&#x27;*:*&#x27;</span>,</span><br><span class="line">        <span class="attr">query</span>: &#123;</span><br><span class="line">            userId,</span><br><span class="line">            roomId</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">cors</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">transports</span>: [<span class="string">&#x27;websocket&#x27;</span>],</span><br><span class="line">        <span class="attr">transportOptions</span>: &#123;</span><br><span class="line">            <span class="attr">polling</span>:&#123;</span><br><span class="line">                <span class="attr">extraHeaders</span>:&#123;</span><br><span class="line">                    <span class="string">&#x27;user-id&#x27;</span> : userId,</span><br><span class="line">                    <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>: <span class="string">&#x27;*&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;Origin&#x27;</span>: <span class="string">&#x27;*&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    socket.<span class="title function_">on</span>(<span class="string">&#x27;connected&#x27;</span>, onConnected)</span><br><span class="line">    socket.<span class="title function_">on</span>(<span class="string">&#x27;disconnected&#x27;</span>, <span class="function">(<span class="params">msg</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;disconnect&quot;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    socket.<span class="title function_">on</span>(<span class="string">&#x27;connect_error&#x27;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Connection error:&#x27;</span>, err);</span><br><span class="line">    &#125;)</span><br><span class="line">    socket.<span class="title function_">on</span>(<span class="string">&#x27;connect_timeout&#x27;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Connection timeout:&#x27;</span>, err);</span><br><span class="line">    &#125;)</span><br><span class="line">    socket.<span class="title function_">on</span>(<span class="string">&#x27;receiveMsg&#x27;</span>, onReceiveMsg)</span><br><span class="line">    socket.<span class="title function_">on</span>(<span class="string">&#x27;receiveRoomMsg&#x27;</span>, onReceiveRoomMsg)</span><br><span class="line">    socket.<span class="title function_">on</span>(<span class="string">&#x27;receiveOffer&#x27;</span>, onReceiveOffer)</span><br><span class="line">    socket.<span class="title function_">on</span>(<span class="string">&#x27;receiveAnswer&#x27;</span>, onReceiveAnswer)</span><br><span class="line">    socket.<span class="title function_">on</span>(<span class="string">&#x27;add_candidate&#x27;</span>, onAddCandidate)</span><br><span class="line">    $(<span class="string">&#x27;#user-id&#x27;</span>).<span class="title function_">show</span>()</span><br><span class="line">    $(<span class="string">&#x27;#send-content&#x27;</span>).<span class="title function_">show</span>()</span><br><span class="line">    $(<span class="string">&#x27;#login-form&#x27;</span>).<span class="title function_">hide</span>()</span><br><span class="line">    $(<span class="string">&#x27;#remote-video&#x27;</span>).<span class="title function_">show</span>()</span><br><span class="line">    $(<span class="string">&#x27;#send-button&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> msg = $(<span class="string">&#x27;#msg&#x27;</span>).<span class="title function_">val</span>()</span><br><span class="line">        <span class="keyword">if</span> (!userId) &#123;</span><br><span class="line">            <span class="variable language_">window</span>.<span class="title function_">alert</span>(<span class="string">&#x27;用户id不能为空&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> msgObj = &#123;</span><br><span class="line">            <span class="attr">localUserId</span>: userId,</span><br><span class="line">            roomId,</span><br><span class="line">            <span class="attr">message</span>: msg</span><br><span class="line">        &#125;</span><br><span class="line">        $(<span class="string">&#x27;#msg&#x27;</span>).<span class="title function_">val</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        socket.<span class="title function_">emit</span>(<span class="string">&#x27;sendRoomMsg&#x27;</span>, msgObj)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getRoomHost</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        $.<span class="title function_">get</span>(<span class="string">`http://<span class="subst">$&#123;HOST&#125;</span>:<span class="subst">$&#123;PORT&#125;</span>/socket/roomHost?roomId=<span class="subst">$&#123;roomId&#125;</span>`</span>, <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">resolve</span>(res.<span class="property">data</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">isRoomHost</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">getRoomHost</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">resolve</span>(res == userId)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">connectRTCToRoomHost</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> roomHostId = <span class="keyword">await</span> <span class="title function_">getRoomHost</span>()</span><br><span class="line">    <span class="keyword">if</span> (roomHostId) &#123;</span><br><span class="line">        <span class="keyword">if</span> (roomHostId == userId) &#123;</span><br><span class="line">            localStream = <span class="keyword">await</span> <span class="title function_">createLocalMediaStream</span>()</span><br><span class="line">            $(<span class="string">&#x27;#remote-video&#x27;</span>)[<span class="number">0</span>].<span class="property">srcObject</span> = localStream</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            socket.<span class="title function_">emit</span>(<span class="string">&#x27;sendMsg&#x27;</span>, &#123;</span><br><span class="line">                <span class="attr">localUserId</span>: userId,</span><br><span class="line">                <span class="attr">remoteUserId</span>: roomHostId,</span><br><span class="line">                roomId,</span><br><span class="line">                <span class="attr">msgType</span>: <span class="string">&#x27;3&#x27;</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">connectRTCPC</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`userId: <span class="subst">$&#123;userId&#125;</span> connectRTCPC`</span>);</span><br><span class="line">    <span class="keyword">if</span> (localStream) &#123;</span><br><span class="line">        <span class="keyword">let</span> pcsKey = <span class="title class_">Object</span>.<span class="title function_">keys</span>(pcs)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; pcsKey.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> pc = pcs[pcsKey[i]]</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`pc<span class="subst">$&#123;i&#125;</span>`</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(pc);</span><br><span class="line">            localStream.<span class="title function_">getTracks</span>().<span class="title function_">forEach</span>(<span class="function">(<span class="params">track</span>) =&gt;</span> &#123;</span><br><span class="line">                pc.<span class="title function_">addTrack</span>(track, localStream)</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(track);</span><br><span class="line">            &#125;)</span><br><span class="line">            addedPCs[pcsKey[i]] = pc</span><br><span class="line">            <span class="comment">//pc.addStream(localStream)</span></span><br><span class="line">        &#125;</span><br><span class="line">        pcs = &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> connected = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">onConnected</span>(<span class="params">id</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (connected) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    socketId = id</span><br><span class="line">    connected = <span class="literal">true</span></span><br><span class="line">    <span class="title function_">connectRTCToRoomHost</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">onReceiveMsg</span>(<span class="params">message</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;userId&#125;</span> 接收到 <span class="subst">$&#123;message.remoteUserId&#125;</span> 的message msgType: <span class="subst">$&#123;message.msgType&#125;</span>`</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(message);</span><br><span class="line">    <span class="keyword">if</span> (message.<span class="property">msgType</span> == <span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">        <span class="comment">// 成为房主</span></span><br><span class="line">        </span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (message.<span class="property">msgType</span> == <span class="string">&#x27;2&#x27;</span>) &#123;</span><br><span class="line">        <span class="comment">// 房主下线</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (message.<span class="property">msgType</span> == <span class="string">&#x27;3&#x27;</span>) &#123;</span><br><span class="line">        <span class="comment">// 其他人申请发offer</span></span><br><span class="line">        <span class="keyword">let</span> pc = <span class="title function_">createPeerConnection</span>(message.<span class="property">remoteUserId</span>)</span><br><span class="line">        <span class="title function_">sendOffer</span>(message.<span class="property">remoteUserId</span>, pc)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">onReceiveRoomMsg</span>(<span class="params">message</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> addMsg = <span class="string">`<span class="subst">$&#123;message.remoteUserId&#125;</span>: <span class="subst">$&#123;message.message&#125;</span>`</span></span><br><span class="line">    $(<span class="string">&#x27;#chat-content&#x27;</span>).<span class="title function_">append</span>($(<span class="string">&quot;&lt;li&gt;&lt;/li&gt;&quot;</span>).<span class="title function_">text</span>(addMsg))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">createLocalMediaStream</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">await</span> navigator.<span class="property">mediaDevices</span>.<span class="title function_">getUserMedia</span>(&#123;</span><br><span class="line">        <span class="attr">video</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">audio</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createPeerConnection</span>(<span class="params">remoteUserId</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> pc = <span class="keyword">new</span> <span class="title class_">RTCPeerConnection</span>(&#123;</span><br><span class="line">        <span class="attr">iceServers</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">urls</span>: <span class="string">&#x27;stun:localhost:3478&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">iceTransportPolicy</span>: <span class="string">&#x27;all&#x27;</span>,</span><br><span class="line">        <span class="attr">offerToReceiveAudio</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">offerToReceiveVideo</span>: <span class="literal">true</span>,</span><br><span class="line">      &#125;)</span><br><span class="line">    <span class="comment">//let pc = new RTCPeerConnection()</span></span><br><span class="line">    <span class="keyword">let</span> channel = pc.<span class="title function_">createDataChannel</span>(<span class="string">&quot;channel&quot;</span>)</span><br><span class="line">    channel.<span class="property">onopen</span> = <span class="keyword">function</span>(<span class="params">event</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Channel opened&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(event);</span><br><span class="line">    &#125;</span><br><span class="line">    channel.<span class="property">onmessgae</span> = <span class="keyword">function</span>(<span class="params">event</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(event.<span class="property">data</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    pc.<span class="property">onicecandidate</span> = <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;onIceCandidate&#x27;</span>, event, event.<span class="property">candidate</span>)</span><br><span class="line">        <span class="keyword">if</span> (event.<span class="property">candidate</span>) &#123;</span><br><span class="line">            socket.<span class="title function_">emit</span>(<span class="string">&#x27;add_candidate&#x27;</span>, &#123;</span><br><span class="line">                <span class="attr">localUserId</span>: userId,</span><br><span class="line">                remoteUserId,</span><br><span class="line">                roomId,</span><br><span class="line">                <span class="attr">data</span>: event.<span class="property">candidate</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        pc.<span class="title function_">addIceCandidate</span>(event.<span class="property">candidate</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    pc.<span class="property">oniceconnectionstatechange</span> = <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`oniceconnectionstatechange, pc.iceConnectionState is <span class="subst">$&#123;pc.iceConnectionState&#125;</span>.`</span>, event)</span><br><span class="line">    &#125;</span><br><span class="line">    pc.<span class="property">ontrack</span> = onTrack</span><br><span class="line">    pc.<span class="property">onicegatheringstatechange</span> = <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`onicegatheringstatechange, pc.iceGatheringState is <span class="subst">$&#123;pc.iceGatheringState&#125;</span>.`</span>, event)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    pcs[remoteUserId] = pc</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pc</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">sendOffer</span>(<span class="params">remoteUserId, pc</span>) &#123;</span><br><span class="line">    <span class="title function_">connectRTCPC</span>()</span><br><span class="line">    <span class="keyword">const</span> offer = <span class="keyword">await</span> pc.<span class="title function_">createOffer</span>()</span><br><span class="line">    <span class="keyword">await</span> pc.<span class="title function_">setLocalDescription</span>(offer)</span><br><span class="line">    socket.<span class="title function_">emit</span>(<span class="string">&#x27;sendOffer&#x27;</span>, &#123;</span><br><span class="line">        <span class="attr">localUserId</span>: userId,</span><br><span class="line">        remoteUserId,</span><br><span class="line">        roomId,</span><br><span class="line">        <span class="attr">data</span>: offer</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">onReceiveOffer</span>(<span class="params">message</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> pc = <span class="title function_">createPeerConnection</span>(message.<span class="property">remoteUserId</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`userId: <span class="subst">$&#123;userId&#125;</span> 收到offer <span class="subst">$&#123;message&#125;</span>`</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(message);</span><br><span class="line">    <span class="keyword">await</span> pc.<span class="title function_">setRemoteDescription</span>(message.<span class="property">data</span>)</span><br><span class="line">    <span class="keyword">const</span> answer = <span class="keyword">await</span> pc.<span class="title function_">createAnswer</span>()</span><br><span class="line">    pc.<span class="title function_">setLocalDescription</span>(answer)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`userId: <span class="subst">$&#123;userId&#125;</span> 生成answer <span class="subst">$&#123;message&#125;</span>`</span>);</span><br><span class="line">    socket.<span class="title function_">emit</span>(<span class="string">&#x27;sendAnswer&#x27;</span>, &#123;</span><br><span class="line">        <span class="attr">localUserId</span>: userId,</span><br><span class="line">        <span class="attr">remoteUserId</span>: message.<span class="property">remoteUserId</span>,</span><br><span class="line">        roomId,</span><br><span class="line">        <span class="attr">data</span>: answer</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">onReceiveAnswer</span>(<span class="params">message</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> pc = pcs[message.<span class="property">remoteUserId</span>]</span><br><span class="line">    <span class="keyword">if</span> (!pc) &#123;</span><br><span class="line">        pc = addedPCs[message.<span class="property">remoteUserId</span>]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`userId: <span class="subst">$&#123;userId&#125;</span> 收到answer <span class="subst">$&#123;message&#125;</span>`</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(message);</span><br><span class="line">    <span class="keyword">await</span> pc.<span class="title function_">setRemoteDescription</span>(message.<span class="property">data</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`userId: <span class="subst">$&#123;userId&#125;</span> 接收answer成功`</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">onAddCandidate</span>(<span class="params">message</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> pc = pcs[message.<span class="property">remoteUserId</span>]</span><br><span class="line">    <span class="keyword">if</span> (!pc) &#123;</span><br><span class="line">        pc = addedPCs[message.<span class="property">remoteUserId</span>]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">await</span> pc.<span class="title function_">addIceCandidate</span>(message.<span class="property">data</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">onTrack</span>(<span class="params">event</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;userId&#125;</span> 接收到track`</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(event);</span><br><span class="line">    <span class="title function_">isRoomHost</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">        <span class="keyword">if</span> (!res) &#123;</span><br><span class="line">            $(<span class="string">&#x27;#remote-video&#x27;</span>)[<span class="number">0</span>].<span class="property">srcObject</span> = event.<span class="property">streams</span>[<span class="number">0</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;onTrack&#x27;</span>, event)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="服务端-1"><a href="#服务端-1" class="headerlink" title="服务端"></a>服务端</h3><p>跟上面的聊天室比大部分的配置和实体类都没有较大改变</p><p>变化比较大的其一是 ClientCache接口及其实现类LocalClientCache：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.joker.test1backend.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.joker.test1backend.domain.ClientInfo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 客户端缓存接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ClientCache</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 存储客户端</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clientInfo</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">saveClient</span><span class="params">(ClientInfo clientInfo)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取客户端</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clientInfo</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    ClientInfo <span class="title function_">getClient</span><span class="params">(ClientInfo clientInfo)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取房间内所有客户端</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clientInfo</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    ClientInfo <span class="title function_">getRoomClients</span><span class="params">(ClientInfo clientInfo)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从缓存中删除客户端</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clientInfo</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">deleteClient</span><span class="params">(ClientInfo clientInfo)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查找房主</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> roomId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String <span class="title function_">getRoomHost</span><span class="params">(String roomId)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> org.joker.test1backend.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.corundumstudio.socketio.SocketIOClient;</span><br><span class="line"><span class="keyword">import</span> org.joker.test1backend.domain.ClientInfo;</span><br><span class="line"><span class="keyword">import</span> org.joker.test1backend.domain.MessageInfo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component(&quot;localClientCache&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LocalClientCache</span> <span class="keyword">implements</span> <span class="title class_">ClientCache</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// roomId - userId - socketIO</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String, Map&lt;String, SocketIOClient&gt;&gt; cache = <span class="keyword">new</span> <span class="title class_">ConcurrentHashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// roomId - userId</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String, String&gt; roomHostCache = <span class="keyword">new</span> <span class="title class_">ConcurrentHashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveClient</span><span class="params">(ClientInfo clientInfo)</span> &#123;</span><br><span class="line">        cache.compute(clientInfo.getRoomId(), (k, v) -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (v == <span class="literal">null</span>) &#123;</span><br><span class="line">                v = <span class="keyword">new</span> <span class="title class_">ConcurrentHashMap</span>&lt;&gt;();</span><br><span class="line">                roomHostCache.put(clientInfo.getRoomId(), clientInfo.getLocalUserId());</span><br><span class="line">                clientInfo.getSocketIOClient().sendEvent(<span class="string">&quot;sendMsg&quot;</span>,</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">MessageInfo</span>()</span><br><span class="line">                                .setMessage(<span class="string">&quot;成为房主&quot;</span>)</span><br><span class="line">                                .setLocalUserId(<span class="string">&quot;-1&quot;</span>)</span><br><span class="line">                                .setRemoteUserId(clientInfo.getLocalUserId())</span><br><span class="line">                                .setMsgType(<span class="number">1</span>)</span><br><span class="line">                );</span><br><span class="line">            &#125;</span><br><span class="line">            v.put(clientInfo.getLocalUserId(), clientInfo.getSocketIOClient());</span><br><span class="line">            <span class="keyword">return</span> v;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ClientInfo <span class="title function_">getClient</span><span class="params">(ClientInfo clientInfo)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ClientInfo</span>().setSocketIOClient(cache.get(clientInfo.getRoomId()).get(clientInfo.getRemoteUserId()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ClientInfo <span class="title function_">getRoomClients</span><span class="params">(ClientInfo clientInfo)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ClientInfo</span>().setRoomSocketIOClients(cache.get(clientInfo.getRoomId()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteClient</span><span class="params">(ClientInfo clientInfo)</span> &#123;</span><br><span class="line">        cache.computeIfPresent(clientInfo.getRoomId(), (roomId, roomList) -&gt; &#123;</span><br><span class="line">            roomList.remove(clientInfo.getLocalUserId());</span><br><span class="line">            <span class="keyword">if</span> (clientInfo.getLocalUserId().equals(roomHostCache.get(roomId))) &#123;</span><br><span class="line">                roomHostCache.remove(roomId);</span><br><span class="line">                roomList.forEach((userId, socket) -&gt; &#123;</span><br><span class="line">                    socket.sendEvent(<span class="string">&quot;sendMsg&quot;</span>,</span><br><span class="line">                            <span class="keyword">new</span> <span class="title class_">MessageInfo</span>()</span><br><span class="line">                                    .setMessage(<span class="string">&quot;房主下线&quot;</span>)</span><br><span class="line">                                    .setLocalUserId(<span class="string">&quot;-1&quot;</span>)</span><br><span class="line">                                    .setRemoteUserId(userId)</span><br><span class="line">                                    .setMsgType(<span class="number">2</span>)</span><br><span class="line">                    );</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (roomList.isEmpty()) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> roomList;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getRoomHost</span><span class="params">(String roomId)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> roomHostCache.get(roomId);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其二是SocketIOHandler：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.joker.test1backend.handler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.corundumstudio.socketio.AckRequest;</span><br><span class="line"><span class="keyword">import</span> com.corundumstudio.socketio.SocketIOClient;</span><br><span class="line"><span class="keyword">import</span> com.corundumstudio.socketio.annotation.OnConnect;</span><br><span class="line"><span class="keyword">import</span> com.corundumstudio.socketio.annotation.OnDisconnect;</span><br><span class="line"><span class="keyword">import</span> com.corundumstudio.socketio.annotation.OnEvent;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.joker.test1backend.common.ClientCache;</span><br><span class="line"><span class="keyword">import</span> org.joker.test1backend.domain.ClientInfo;</span><br><span class="line"><span class="keyword">import</span> org.joker.test1backend.domain.MessageInfo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SocketIOHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource(name = &quot;localClientCache&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> ClientCache clientCache;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OnConnect</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onConnect</span><span class="params">(SocketIOClient client)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">roomId</span> <span class="operator">=</span> getRoomId(client);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userId</span> <span class="operator">=</span> getUserId(client);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(roomId) || StringUtils.isBlank(userId)) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;加入房间错误 roomId=&#123;&#125;, userId=&#123;&#125;&quot;</span>, roomId, userId);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">UUID</span> <span class="variable">sessionId</span> <span class="operator">=</span> client.getSessionId();</span><br><span class="line">        client.joinRoom(roomId);</span><br><span class="line">        log.info(<span class="string">&quot;userId=&#123;&#125;用户建立连接sessionId=&#123;&#125;&quot;</span>, userId, sessionId);</span><br><span class="line">        clientCache.saveClient(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ClientInfo</span>()</span><br><span class="line">                        .setRoomId(roomId)</span><br><span class="line">                        .setLocalUserId(userId)</span><br><span class="line">                        .setSessionId(sessionId)</span><br><span class="line">                        .setSocketIOClient(client)</span><br><span class="line">        );</span><br><span class="line">        client.sendEvent(<span class="string">&quot;connected&quot;</span>, sessionId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OnDisconnect</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDisconnect</span><span class="params">(SocketIOClient client)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">roomId</span> <span class="operator">=</span> getRoomId(client);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userId</span> <span class="operator">=</span> getUserId(client);</span><br><span class="line">        <span class="type">UUID</span> <span class="variable">sessionId</span> <span class="operator">=</span> client.getSessionId();</span><br><span class="line">        client.leaveRoom(roomId);</span><br><span class="line">        log.info(<span class="string">&quot;userId=&#123;&#125;用户取消连接sessionId=&#123;&#125;&quot;</span>, userId, sessionId);</span><br><span class="line">        clientCache.deleteClient(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ClientInfo</span>()</span><br><span class="line">                        .setRoomId(roomId)</span><br><span class="line">                        .setLocalUserId(userId)</span><br><span class="line">                        .setSessionId(sessionId)</span><br><span class="line">                        .setSocketIOClient(client)</span><br><span class="line">        );</span><br><span class="line">        client.sendEvent(<span class="string">&quot;disconnected&quot;</span>, <span class="keyword">new</span> <span class="title class_">MessageInfo</span>().setMessage(<span class="string">&quot;房主下线&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OnEvent(&quot;sendMsg&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendMsg</span><span class="params">(SocketIOClient client, AckRequest ackRequest, MessageInfo message)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;接受到 sendMsg 事件 MessageInfo=&#123;&#125;&quot;</span>, message);</span><br><span class="line">        <span class="type">String</span> <span class="variable">roomId</span> <span class="operator">=</span> getRoomId(client);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userId</span> <span class="operator">=</span> getUserId(client);</span><br><span class="line">        <span class="type">UUID</span> <span class="variable">sessionId</span> <span class="operator">=</span> client.getSessionId();</span><br><span class="line">        <span class="type">ClientInfo</span> <span class="variable">remoteClient</span> <span class="operator">=</span> clientCache.getClient(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ClientInfo</span>()</span><br><span class="line">                        .setRoomId(roomId)</span><br><span class="line">                        .setLocalUserId(userId)</span><br><span class="line">                        .setRemoteUserId(message.getRemoteUserId())</span><br><span class="line">                        .setSocketIOClient(client)</span><br><span class="line">                        .setSessionId(sessionId)</span><br><span class="line">        );</span><br><span class="line">        <span class="type">SocketIOClient</span> <span class="variable">remoteSocketIOClient</span> <span class="operator">=</span> remoteClient.getSocketIOClient();</span><br><span class="line">        <span class="keyword">if</span> (remoteSocketIOClient == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 抛异常什么的</span></span><br><span class="line">            log.error(<span class="string">&quot;找不到userId=&#123;&#125;的远程Socket&quot;</span>, message.getRemoteUserId());</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        remoteSocketIOClient.sendEvent(<span class="string">&quot;receiveMsg&quot;</span>, message.switchUserId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OnEvent(&quot;sendRoomMsg&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendRoomMsg</span><span class="params">(SocketIOClient client, AckRequest ackRequest, MessageInfo message)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;接受到 sendRoomMsg 事件 MessageInfo=&#123;&#125;&quot;</span>, message);</span><br><span class="line">        <span class="type">String</span> <span class="variable">roomId</span> <span class="operator">=</span> getRoomId(client);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userId</span> <span class="operator">=</span> getUserId(client);</span><br><span class="line">        <span class="type">UUID</span> <span class="variable">sessionId</span> <span class="operator">=</span> client.getSessionId();</span><br><span class="line">        message.switchUserId();</span><br><span class="line">        clientCache.getRoomClients(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ClientInfo</span>()</span><br><span class="line">                        .setRoomId(roomId)</span><br><span class="line">                        .setLocalUserId(userId)</span><br><span class="line">                        .setRemoteUserId(message.getRemoteUserId())</span><br><span class="line">                        .setSocketIOClient(client)</span><br><span class="line">                        .setSessionId(sessionId)</span><br><span class="line">        ).getRoomSocketIOClients().values().forEach(it -&gt; &#123;</span><br><span class="line">            it.sendEvent(<span class="string">&quot;receiveRoomMsg&quot;</span>, message);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OnEvent(&quot;sendOffer&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendOffer</span><span class="params">(SocketIOClient client, AckRequest ackRequest, MessageInfo message)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;接收到offer MessageInfo=&#123;&#125;&quot;</span>, message);</span><br><span class="line">        <span class="type">String</span> <span class="variable">roomId</span> <span class="operator">=</span> getRoomId(client);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userId</span> <span class="operator">=</span> getUserId(client);</span><br><span class="line">        <span class="type">UUID</span> <span class="variable">sessionId</span> <span class="operator">=</span> client.getSessionId();</span><br><span class="line">        <span class="type">ClientInfo</span> <span class="variable">remoteClient</span> <span class="operator">=</span> clientCache.getClient(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ClientInfo</span>()</span><br><span class="line">                        .setRoomId(roomId)</span><br><span class="line">                        .setLocalUserId(userId)</span><br><span class="line">                        .setRemoteUserId(message.getRemoteUserId())</span><br><span class="line">                        .setSocketIOClient(client)</span><br><span class="line">                        .setSessionId(sessionId)</span><br><span class="line">        );</span><br><span class="line">        remoteClient.getSocketIOClient().sendEvent(<span class="string">&quot;receiveOffer&quot;</span>, message.switchUserId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OnEvent(&quot;sendAnswer&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendAnswer</span><span class="params">(SocketIOClient client, AckRequest ackRequest, MessageInfo message)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;接收到answer MessageInfo=&#123;&#125;&quot;</span>, message);</span><br><span class="line">        <span class="type">String</span> <span class="variable">roomId</span> <span class="operator">=</span> getRoomId(client);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userId</span> <span class="operator">=</span> getUserId(client);</span><br><span class="line">        <span class="type">UUID</span> <span class="variable">sessionId</span> <span class="operator">=</span> client.getSessionId();</span><br><span class="line">        <span class="type">ClientInfo</span> <span class="variable">remoteClient</span> <span class="operator">=</span> clientCache.getClient(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ClientInfo</span>()</span><br><span class="line">                        .setRoomId(roomId)</span><br><span class="line">                        .setLocalUserId(userId)</span><br><span class="line">                        .setRemoteUserId(message.getRemoteUserId())</span><br><span class="line">                        .setSocketIOClient(client)</span><br><span class="line">                        .setSessionId(sessionId)</span><br><span class="line">        );</span><br><span class="line">        remoteClient.getSocketIOClient().sendEvent(<span class="string">&quot;receiveAnswer&quot;</span>, message.switchUserId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OnEvent(&quot;add_candidate&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCandidate</span><span class="params">(SocketIOClient client, AckRequest ackRequest, MessageInfo message)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;接收到add_candidate MessageInfo=&#123;&#125;&quot;</span>, message);</span><br><span class="line">        <span class="type">String</span> <span class="variable">roomId</span> <span class="operator">=</span> getRoomId(client);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userId</span> <span class="operator">=</span> getUserId(client);</span><br><span class="line">        <span class="type">UUID</span> <span class="variable">sessionId</span> <span class="operator">=</span> client.getSessionId();</span><br><span class="line">        <span class="type">ClientInfo</span> <span class="variable">remoteClient</span> <span class="operator">=</span> clientCache.getClient(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ClientInfo</span>()</span><br><span class="line">                        .setRoomId(roomId)</span><br><span class="line">                        .setLocalUserId(userId)</span><br><span class="line">                        .setRemoteUserId(message.getRemoteUserId())</span><br><span class="line">                        .setSocketIOClient(client)</span><br><span class="line">                        .setSessionId(sessionId)</span><br><span class="line">        );</span><br><span class="line">        remoteClient.getSocketIOClient().sendEvent(<span class="string">&quot;add_candidate&quot;</span>, message.switchUserId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getUserId</span><span class="params">(SocketIOClient client)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> client.getHandshakeData().getSingleUrlParam(<span class="string">&quot;userId&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getRoomId</span><span class="params">(SocketIOClient client)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> client.getHandshakeData().getSingleUrlParam(<span class="string">&quot;roomId&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加了一个获取房间房主号的接口和对应的统一返回实体，其他的实体没有太大变化，最多就是加了几个属性，类型都是基本类型和String：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.joker.test1backend.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.experimental.Accessors;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Accessors(chain = true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">R</span>&lt;D&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> D data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;D&gt; R&lt;D&gt; <span class="title function_">success</span><span class="params">(D data)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">R</span>&lt;D&gt;()</span><br><span class="line">                .setCode(<span class="number">200</span>)</span><br><span class="line">                .setData(data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;D&gt; R&lt;D&gt; <span class="title function_">successMsg</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">R</span>&lt;D&gt;()</span><br><span class="line">                .setCode(<span class="number">200</span>)</span><br><span class="line">                .setMsg(msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;D&gt; R&lt;D&gt; <span class="title function_">fail</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">R</span>&lt;D&gt;()</span><br><span class="line">                .setCode(<span class="number">500</span>)</span><br><span class="line">                .setMsg(msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> org.joker.test1backend.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.joker.test1backend.common.ClientCache;</span><br><span class="line"><span class="keyword">import</span> org.joker.test1backend.common.R;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/socket&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@CrossOrigin(origins = &quot;*&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SocketController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource(name = &quot;localClientCache&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> ClientCache clientCache;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/roomHost&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;String&gt; <span class="title function_">getRoomHost</span><span class="params">(<span class="meta">@RequestParam(&quot;roomId&quot;)</span> String roomId)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">roomHost</span> <span class="operator">=</span> clientCache.getRoomHost(roomId);</span><br><span class="line">        log.info(<span class="string">&quot;查询 roomId=&#123;&#125; 的 host 为=&#123;&#125;&quot;</span>, roomId, roomHost);</span><br><span class="line">        <span class="keyword">return</span> R.success(roomHost);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一篇不错的文章 <a href="https://www.bilibili.com/read/cv18179472/#">https://www.bilibili.com/read/cv18179472/#</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ReentrantLock源码跟踪-分析AQS非公平独占模式</title>
      <link href="/2024/07/11/ReentrantLock%E6%BA%90%E7%A0%81%E8%B7%9F%E8%B8%AA-%E5%88%86%E6%9E%90AQS%E9%9D%9E%E5%85%AC%E5%B9%B3%E7%8B%AC%E5%8D%A0%E6%A8%A1%E5%BC%8F/"/>
      <url>/2024/07/11/ReentrantLock%E6%BA%90%E7%A0%81%E8%B7%9F%E8%B8%AA-%E5%88%86%E6%9E%90AQS%E9%9D%9E%E5%85%AC%E5%B9%B3%E7%8B%AC%E5%8D%A0%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="AQS基本介绍"><a href="#AQS基本介绍" class="headerlink" title="AQS基本介绍"></a>AQS基本介绍</h1><p>全面AbstractQueuedSynchronizer<br>AQS做为一个抽象的锁父类<br>其中内部维护了一个state锁状态(临界区入口使用unsafe的CAS方法保证同步)和一个阻塞队列来实现锁的基本特性<br>子类可以实现AQS的抽象方法来定义自己的锁特性逻辑<br>像Lock接口的大部分实现、Semaphore、countdownlatch等很多juc工具类都是基于AQS实现的</p><p>AQS的子类锁的特点为阻塞（悲观锁）<br>其中可以从两个维度划分：<br>    独占和共享<br>    公平和非公平</p><p>独占锁是像传统的synchronize关键字一样，一次只能有一个线程获取<br>共享锁则是像读锁一样，在特殊场景下可以多线程共同获取</p><p>公平是指获取锁顺序与线程请求锁顺序相同，但这种会影响性能，推荐使用非公平的<br>AQS实现的非公平则是当前要获取锁的线程与阻塞队列中第一个线程之间相互竞争锁，新线程获取锁失败会加入到队尾，而在队列中的线程获取锁失败位置不变，因此是相对公平的，也不会引发很严重的线程饥饿效应，推荐使用这种</p><p>要了解AQS，可以先从了解AQS的未实现方法使用AQS实现自定义锁开始</p><h1 id="AQS抽象方法"><a href="#AQS抽象方法" class="headerlink" title="AQS抽象方法"></a>AQS抽象方法</h1><p>AQS提供了几个默认需要子类实现的方法，这几个方法虽然不是抽象的，但是默认实现是抛异常UnsupportedOperationException</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 尝试加锁，返回值为是否加锁成功，参数为加锁的数（一般重入锁每重入一次arg传一个1，假设现在重入了五次，锁的state就会为5，释放时每释放一次这个state减一）</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">tryAcquire</span><span class="params">(<span class="type">int</span> arg)</span></span><br><span class="line"><span class="comment">// 尝试释放锁，返回值为是否释放成功，参数同上面加锁参数</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">tryRelease</span><span class="params">(<span class="type">int</span> arg)</span></span><br><span class="line"><span class="comment">// 是否持有独占锁</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">isHeldExclusively</span><span class="params">()</span></span><br><span class="line"><span class="comment">// 共享模式使用</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">tryAcquireShared</span><span class="params">(<span class="type">int</span> arg)</span></span><br><span class="line"><span class="comment">// 共享模式使用</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">tryReleaseShared</span><span class="params">(<span class="type">int</span> arg)</span></span><br></pre></td></tr></table></figure><p>要使用AQS做一个锁，提供一种思路，可以模拟ReentrantLock的做法，里面使用一个Sync的内部类继承AQS并实现其对应方法<br>锁本身实现Lock接口并实现加锁解锁的方法，锁类构造时内部同时构造一个Sync类的对象，锁本身的方法调用Sync类的方法实现</p><p>如果要使用条件可以在Sync里面提供一个条件方法，并在里面new一个AQS的ConditionObject对象返回给外部（本文不深入探讨Condition）</p><h1 id="ReentrantLock-到部分AQS的源码流程"><a href="#ReentrantLock-到部分AQS的源码流程" class="headerlink" title="ReentrantLock 到部分AQS的源码流程"></a>ReentrantLock 到部分AQS的源码流程</h1><p>ReentrantLock是基于AQS实现的一种阻塞独占的可公平&#x2F;非公平锁，<br>里面使用了两种Sync类继承AQS，其中FairSync和NonFairSync代表是否公平，具体是否公平是根据构造方法传参来决定使用哪种Sync，本文着重探讨非公平情况<br>先简单说明一下AQS的同步机制：<br>    AQS使用state状态来管理线程是否获取锁，如果没有线程加锁该值应该为0，有线程加锁，如果是重入锁，重入了多少次则该值为多少<br>    一般内部使用CAS操作改变state状态来获取锁，获取成功后会将exclusiveOwnerThread设置为当前线程，解锁时也是根据这个判断是否解锁<br>    AQS使用LockSupport的park和unpark来阻塞&#x2F;唤醒线程</p><pre><code>内部通过维护一个双端队列来维护阻塞线程，当某一线程获取锁失败后会加入到队列尾部，每一个线程会生成一个结点队列的每个结点都有一个状态waitStatus(ws)    ws&gt;0表示当前结点线程取消了    ws=-1代表当前结点需要在锁释放时唤醒下一个结点的线程    ws还有其他状态本文不着重讨论，因为在这个场景不会用上队列在第一次有线程要进入阻塞时（有两个以上线程竞争锁，其中一个失败加入队列）会初始化一个dummy(哑元)结点，该结点状态会设置为-1且thread代表线程=null，主要负责唤醒下一个结点的线程（该设计是为了降低并发度）后面加入队列的线程结点状态都会设置为-1，如果第一个有线程的结点获取锁成功后会将自己结点设置为头结点并将thread设为null用作dummy唤醒第一个队列线程抢锁是由解锁线程负责，该线程会忽略被取消的结点找到第一个该被唤醒的线程唤醒在加锁时会处理掉那些状态&gt;0（被取消了）的结点，而解锁时也是会忽略这些被取消的线程</code></pre><p>lock上锁流程图</p><img  src=http://www.plantuml.com/plantuml/svg/dLZTKnl94Ny-_HNZbokfmb6Gl4dbLAauSg6A0fznBdbLf9LHMLvnqYgSA-Kgm0Oa48BO1jkORoF3cIznHpWXOVXdTcQb9_yBwPxUNOsaXJZHWytEzlJqnwz_tRDtnjAHXuyZB9lHVj3IHY8QIGx4MKht-OBtDKqtqX7T64n57mM3IVWt1CjygI2EIlpjlbcPQxoQP7pwtAmSZJpHerPjJ-IlwxCVmz-Fi0miTECUVu3LhzysPWkDsGLhwi9Qcs-iR_3fGtxngxNwd1zlMCKo6qhfyKWYZLha6UNr-icozUvC54lHICQQEnSJavyl2_p3bDXOetMHM-9pcsRjVNrxdyzjWIcq0c8aK3--iZuTfyPrBMrMglpJIvvViAhNrluy7968Cp-OsHrDFHwBfBMm7XlHZ14ZOcZ-dYxM6mWmOrJJcL_L7F3vGDP868cKpcxRpFxfO_0BPlLC9AwfOkEHiG7Ty1kZYKmNo-2EuNWyenbTJFjfJ8l2_zcn6AmwCOC8ALAyV2hUdC39z0OCeyZmoKLhhnRoFMqt4FRq_nHDPZE9VsZ368W7esaj4lEx5c9QrdT8ByLByv3l21ySb35IOpwVbineJf3uxcdzhDGHf4ZqnsmYhVcRON5TwuLJ0HLykYGEjyLo6JESMwrVlnFh9TKcEByN921jSlyT8_qaR6kDf1y6sDTVC_kKxxDQLelv8x7ONoC9GqlxXr8nhRl_Rts3VnaP-A4_qCLmGqZgKOtXCmjm0C6El77HHcw1EVL_b_bI4S85bhSS1wAs5X3wCDbuK-FR6sPrnhQt6Gw4TtVJU3iUqWp5fOHkEEva71mupn2INbkjt2OrwbGy3vIeEDjLsNhnDxwueYQIloZG8-J9GLh8tH1FfY96Gd_8z9IXkQlum_hM8R3Cght4aZwjyOtvpvUhBKBuuzEdPlL0x6_poqKsykVm_VvlsLscQ-CCy-8FX3fsMFE7V67Btk7c3JTbaycGjnNZaEgCB3-x79OEp8kybpsssx_zKjyvW5Y8ynph2m_rzGyEIiDORwT1ThoaesPbtgnCc9MFjj-hpqbXLeSSFs8Z0zyDXGT1ppSUUaXI7BtdQ_lMKPvVJOlD9L0brhVDsZdh6nxwTk31mF0GRlzzoFVLLyv6KPYrTglkqPZ5gzV8dDLNzPEIUBr56ipBBV7YYDsxFtml_5tu0ORicpzq1apcc86gUkuGDAlLntgWpiJQHy8_4sjvFd49IoJ3TrTv-LyWwQhKz9X4HXDXOhC4zEv2gbiU1f3bInz0Jy_dovpuPTifBqXG0LTvxYrKEPOulMdQxFxXaFL3XsK3xEvTreDrVpCDkpNWKBcHpcg1be04R-D8jL3QW1fCQqOshJFKs7pZrrC1XeI8vggxqLZRV6ysTYny0jQs7aJf-jrTrni_fc9nIiOESuXn-oBhYAd1H4_PU0HUXzJK9kBowIboVH1RFRG9uaEb8mBXyTagBzQ8xT1ncsLoPU9GBuSn7YtHRNS_g2Z5PzbhMXq80j629H0DR8TlDddkjIiUvDCvaT-hRnTkx0CTr2mxrKtI2b4ZubbIYnj1iNm6vUZkeNu5nSqdLx5IeIAhyzX4oZCjb2jj9eDv-QhnRDzjDBG85OALbtl7QrMv_HIyeKTxrym2AL4AJuhiYfKZ4e660Jf84r6LUuYzA0a8GNInIORR8QnKhP_nMFDorJsMU8Vldf6ga78i0K9npwmiW3BhyD3cINcEovEWk6aW18iOR2rlLdP1sAoL06UElJa-EOlTlrY6c8ACxj8kKKTZwhtgB9qNopv-_CIr5AIK_eVWXFNwt1IyOdUeen3qF0eFfavx6d3p9tLIw2bpNlMYneNso_51v5Oeyi2l7M7Kz1_z0R5o8NvT1ZVuyIf6_xW09UQYYzuYvYTN8Pm0hP1TdbuuRfc54ClAK8g_yT54KlCan37cb2QLkTleOANnyscxwKvSnx2aHx6qWPBRfhERGjnIJHrly0UZ3-Gq4SVZ9Rgfqm5oQEeNSpl0Cr3sacfogebsDJf8u1TmHtb5yY0CMrmeed9733KtSMHMeGQUkL12K5SBBWf5Va6ApxbH0bnskE7qoFRre8efTyXLaTkOc40MlFfe5K_GERXrlJwdHRnLOK5_UcazFxVBElyIuxC59LC6HPXPS1Ag6w2aNf48ZM1fvu3Yj08OFxLqEZjcQB5EeRy3Vp_ojNceG5yPgUqS0UgTiEESx8p7pasY7KcPqLGs6Ri7urGu3dRyAG98ZJbmeWoJwsxqvFYFynVq_xvHBVfem770Vqlh_p_GntCpG5HGz_17q7EBd1T9Lk546e0QQnFWFDfvyzONXQOK75i_MGSSuuFvQH6zdgt2nGXU01Bun5kx9XJjBf083fu7YJpqff9zaPRsMGTmMScxu6Zgjni3fWius3F452HY9xfBOgK0wq-VcxKLTJe6fhSxu5BHgkrPjIFGQTy47GF-X_APpi6acOXJ3EedHtonX1SmXntj1W6jGPQfsAhmwsUTS6wxBT-2FOKzMmrHI0VxdFkbOd65OaCha9FnJCXJ1Q9-F8C4AgSEkaJS3josIgkVd8atnIPqYDxe8mXDKd1rzKnVw6RLdaDaIsxaF2O7nvijj9tx8-knsy3j3hLEM4nrJmqqVXZOEI2GIsTpVF6a_kmJJXz7EqJXNcpScZb9hH0SaRy2VaBzSBLt9XVgrkufc5ftaBeuXw40irjzroaWAjFMqemevc-ExHT5Jlqu0IE85ypwmYDknIlOmTn3NrWguhWWqmytEB5I1X2qJ0Qoy-rH66unjeFVl-3-yDyLFFLr5hKdH8bR-5NEEfxW2yiq4WC0K5XbMMmkSAb_jTkOUG7yHLTHcSjvEqCoPXvzJsbuCFrq0hxL0NYIuvCpViaxZmB6BZjd2Zcxh-c2G7peqYpTYReLA_m1sWqYdJmGjEMZsNHQqmtd2jdSZrzLo6HVKBsCqOqjH5_k_WC0><p>#注意点<br>ReentrantLock解锁，当线程没有获取到锁就调用unlock方法时，会抛出IllegalMonitorStateException异常</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2024年bug合集1</title>
      <link href="/2024/07/11/bugs/2024_bug1/"/>
      <url>/2024/07/11/bugs/2024_bug1/</url>
      
        <content type="html"><![CDATA[<p>LocalDate、LocalDateTime这种的计算方法如plusMonths不会在源对象上操作，而是返回一个新对象<br>BigDecimal这种也是一样，需要注意用变量来接新值</p><hr><p>日期配置为31日LocalDate报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">账单日计算逻辑：</span><br><span class="line">    账单日是记账周期的最后一天，所以如果</span><br><span class="line">        记账时间 &lt; 账单日，记为当月，为 记账时间月份 + 账单日</span><br><span class="line">        记账时间 &gt;= 账单日，记为下月，为（记账时间月份 + 1月） + 账单日</span><br><span class="line"></span><br><span class="line">    还款日：</span><br><span class="line">        账单日 &gt;= 还款日，账单日次月还款</span><br><span class="line">        账单日 &lt; 还款日，当月还款</span><br><span class="line"></span><br><span class="line">        (特殊场景：</span><br><span class="line">            还款日 &gt; 当前实际还款月份的最后一天，还款日取实际还款月份的最后一天</span><br><span class="line">        )</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> fundDay; <span class="comment">// 账单日</span></span><br><span class="line"><span class="type">int</span> repayDay; <span class="comment">// 还款日</span></span><br><span class="line">LocalDate accountLocalDate; <span class="comment">// 实际记账日期</span></span><br><span class="line"><span class="comment">// 实际账单日</span></span><br><span class="line"><span class="type">LocalDate</span> <span class="variable">fundDayLocalDate</span> <span class="operator">=</span> accountLocalDate.withDayOfMonth(fundDay);</span><br><span class="line"><span class="keyword">if</span> (fundDay &lt;= accountLocalDate.getDayOfMonth()) &#123;</span><br><span class="line">    <span class="comment">// 记账时间 &gt;= 账单日 ，当前账要算到下个月</span></span><br><span class="line">    fundDayLocalDate = fundDayLocalDate.plusMonths(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="variable">currentRepayDay</span> <span class="operator">=</span> repayDay;</span><br><span class="line"><span class="keyword">if</span> (fundDay &gt;= repayDay) &#123;</span><br><span class="line">    <span class="comment">// 账单日 &gt;= 还款日</span></span><br><span class="line">    fundDayLocalDate = fundDayLocalDate.plusMonths(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (fundDayLocalDate.getDayOfMonth() &lt; currentRepayDay) &#123;</span><br><span class="line">    <span class="comment">// 当前还款日超出实际还款日最后一天，取最后一天为还款日</span></span><br><span class="line">    currentRepayDay = fundDayLocalDate.with(TemporalAdjusters.lastDayOfMonth()).getDayOfMonth();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 实际还款日</span></span><br><span class="line"><span class="type">LocalDate</span> <span class="variable">repaymentLocalDate</span> <span class="operator">=</span> fundDayLocalDate.withDayOfMonth(currentRepayDay);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
